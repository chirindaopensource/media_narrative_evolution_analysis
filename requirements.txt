# =============================================================================
# DYNAMIC NARRATIVE ANALYSIS SYSTEM - REQUIREMENTS.TXT
# =============================================================================
# Professional implementation-grade requirements file for longitudinal 
# narrative monitoring and analysis system utilizing topic modeling, 
# change point detection, and LLM-based narrative classification.
#
# Python Version Requirement: >=3.8,<3.12
# =============================================================================

# =============================================================================
# CORE DATA SCIENCE & NUMERICAL COMPUTING STACK
# =============================================================================

# Fundamental numerical computing and array operations
numpy>=1.21.0,<2.0.0

# Data manipulation, analysis, and DataFrame operations
pandas>=1.3.0,<3.0.0

# Scientific computing: optimization, sparse matrices, statistical functions
scipy>=1.7.0,<2.0.0

# =============================================================================
# NATURAL LANGUAGE PROCESSING LIBRARIES
# =============================================================================

# Industrial-strength NLP library with neural network models
spacy>=3.4.0,<4.0.0

# English language model for spaCy (core web model)
# Install via: python -m spacy download en_core_web_sm
# Note: This dependency must be installed separately after spacy installation

# Topic modeling, document similarity, and gensim dictionary/corpus utilities
gensim>=4.2.0,<5.0.0

# =============================================================================
# MACHINE LEARNING FRAMEWORK
# =============================================================================

# Machine learning algorithms, preprocessing, and evaluation metrics
scikit-learn>=1.0.0,<2.0.0

# =============================================================================
# DEEP LEARNING & LARGE LANGUAGE MODEL INFRASTRUCTURE
# =============================================================================

# Deep learning framework with CUDA support
torch>=1.12.0,<3.0.0

# Hugging Face transformers for LLM integration and tokenization
transformers>=4.21.0,<5.0.0

# Memory optimization for large model inference
accelerate>=0.20.0,<1.0.0

# Quantization support for efficient LLM inference
bitsandbytes>=0.39.0,<1.0.0

# =============================================================================
# VISUALIZATION & PLOTTING
# =============================================================================

# Comprehensive plotting and visualization library
matplotlib>=3.5.0,<4.0.0

# Enhanced statistical visualization (optional but recommended)
seaborn>=0.11.0,<1.0.0

# =============================================================================
# UTILITY & PERFORMANCE LIBRARIES
# =============================================================================

# Progress bars for long-running operations
tqdm>=4.64.0,<5.0.0

# YAML configuration file support
PyYAML>=6.0,<7.0

# JSON schema validation for LLM output parsing
jsonschema>=4.0.0,<5.0.0

# Regular expressions with enhanced Unicode support
regex>=2022.0.0

# =============================================================================
# DEVELOPMENT & TESTING DEPENDENCIES (OPTIONAL)
# =============================================================================

# Code formatting
black>=22.0.0,<24.0.0

# Import sorting
isort>=5.10.0,<6.0.0

# Linting
flake8>=4.0.0,<7.0.0

# Type checking
mypy>=0.950,<2.0.0

# Testing framework
pytest>=7.0.0,<8.0.0

# Test coverage
pytest-cov>=3.0.0,<5.0.0

# =============================================================================
# JUPYTER NOTEBOOK SUPPORT (OPTIONAL)
# =============================================================================

# Jupyter notebook environment
jupyter>=1.0.0,<2.0.0

# IPython kernel
ipykernel>=6.0.0,<7.0.0

# =============================================================================
# MEMORY PROFILING & PERFORMANCE MONITORING (OPTIONAL)
# =============================================================================

# Memory usage profiling
memory-profiler>=0.60.0,<1.0.0

# Line-by-line profiling
line-profiler>=4.0.0,<5.0.0

# =============================================================================
# POST-INSTALLATION COMMANDS
# =============================================================================
# After installing requirements, execute the following commands:
#
# 1. Download spaCy English language model:
#    python -m spacy download en_core_web_sm
#
# 2. Verify PyTorch CUDA installation (if GPU support needed):
#    python -c "import torch; print(f'CUDA Available: {torch.cuda.is_available()}')"
#
# 3. Verify transformers installation:
#    python -c "from transformers import AutoTokenizer; print('Transformers OK')"
#
# =============================================================================
# HARDWARE REQUIREMENTS NOTES
# =============================================================================
# 
# MINIMUM SYSTEM REQUIREMENTS:
# - RAM: 16GB (32GB+ recommended for large LLMs)
# - Storage: 50GB+ free space for model weights
# - CPU: Multi-core processor (8+ cores recommended)
# 
# GPU REQUIREMENTS (OPTIONAL BUT RECOMMENDED):
# - CUDA-compatible GPU with 8GB+ VRAM
# - CUDA 11.7+ or compatible version
# - For local LLM inference: 24GB+ VRAM recommended
#
# =============================================================================